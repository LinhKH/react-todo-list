{"version":3,"sources":["components/TodoItem.module.css","components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodosList.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/Navbar.js","components/TodoContainer.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","name","placeholder","value","onChange","target","TodoItem","editing","setEditing","todo","completed","id","viewMode","editMode","display","styles","item","onDoubleClick","console","log","checkbox","defaultChecked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","defaultValue","textInput","setUpdate","handleUpdate","onKeyDown","event","key","TodosList","todos","map","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","path","class","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","prev","width","height","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","savedTodos","JSON","parse","setTodos","useEffect","loadedTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.bc0fcbbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__27sni\",\"checkbox\":\"TodoItem_checkbox__WTkgd\",\"textInput\":\"TodoItem_textInput__1uweZ\"};","import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\",\r\n    }\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1\r\n                style={{\r\n                    fontSize: \"6rem\",\r\n                    fontWeight: \"600\",\r\n                    marginBottom: \"2rem\",\r\n                    lineHeight: \"1em\",\r\n                    color: \"#ececec\",\r\n                    textTransform: \"lowercase\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >TODOS</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React, { useState } from 'react'\r\n\r\nconst InputTodo = (props) => {\r\n\r\n    const [inputText, setInputText] = useState({title:\"\"})\r\n\r\n    let onChange = (e) => {\r\n        setInputText({\r\n            ...inputText,[e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputText.title.trim()) {\r\n            props.addTodoProps(inputText.title)\r\n            setInputText({title:\"\"})\r\n        } else {\r\n            alert(\"title null\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input type=\"text\" name=\"title\" className=\"input-text\" placeholder=\"Add Todo...\" value={inputText.title} onChange={onChange} />\r\n            <button className=\"input-submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputTodo\r\n\r\n","import React, { useState } from 'react';\r\nimport styles from './TodoItem.module.css'\r\n\r\nconst TodoItem = (props) => {\r\n\r\n\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n    }\r\n    const { completed, id, title } = props.todo\r\n\r\n    function handleEditing() {\r\n\r\n        setEditing(true);\r\n        console.log(editing);\r\n    }\r\n\r\n    function handleUpdate(e, id) {\r\n        props.setUpdate(e, id)\r\n    }\r\n\r\n    function handleUpdatedDone(event) {\r\n        if (event.key === \"Enter\") {\r\n            setEditing(false)\r\n        }\r\n    }\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if (editing) {\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    return (\r\n        <li className={styles.item}>\r\n            <div onDoubleClick={handleEditing} style={viewMode}>\r\n                <input\r\n                    className={styles.checkbox}\r\n                    type=\"checkbox\"\r\n                    defaultChecked={completed}\r\n                    onChange={() => props.handleChangeProps(id)} />\r\n                <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n                <span style={completed ? completedStyle : null}>\r\n                    {title}\r\n                </span>\r\n\r\n            </div>\r\n            <input type=\"text\" style={editMode} defaultValue={title} className={styles.textInput}\r\n                onChange={e => { handleUpdate(e.target.value, id) }}\r\n                onKeyDown={handleUpdatedDone}\r\n            />\r\n        </li>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoItem;","\r\n\r\nimport React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nconst TodosList = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {props.todos.map((todo, key) => (\r\n                    <TodoItem key={key} todo={todo}\r\n                        handleChangeProps={props.handleChangeProps}\r\n                        deleteTodoProps={props.deleteTodoProps}\r\n                        setUpdate={props.setUpdate}\r\n\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodosList\r\n","import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nexport default function SinglePage() {\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\",\r\n    }\r\n\r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About the App\",\r\n            description:\r\n                \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About the Author\",\r\n            description:\r\n                \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n        },\r\n    ]\r\n\r\n    const { slug } = useParams()\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n    const { title, description } = aboutContent\r\n\r\n    console.log(useParams())\r\n    return (\r\n        <div className=\"main__content\">\r\n            <h1\r\n                style={{\r\n                    fontSize: \"6rem\",\r\n                    fontWeight: \"600\",\r\n                    marginBottom: \"2rem\",\r\n                    lineHeight: \"1em\",\r\n                    color: \"#ececec\",\r\n                    textTransform: \"lowercase\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >{title}</h1>\r\n            <p>{description}</p>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\"\r\nimport SinglePage from './SinglePage'\r\n\r\nexport default function About(props) {\r\n    console.log(useRouteMatch())\r\n    const { url, path } = useRouteMatch()\r\n    return (\r\n        <div className=\"about__content\">\r\n            <ul className=\"about__list\">\r\n                <li class=\"nav-item\">\r\n                    <Link to={`${url}/about-app`}>About App</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link to={`${url}/about-author`}>About Author</Link>\r\n                </li>\r\n                \r\n            </ul>\r\n            \r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotMatch() {\r\n    return (\r\n        <div>\r\n            No match for this page\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport { FiMenu } from \"react-icons/fi\"\r\n\r\nexport default function Navbar() {\r\n    const links = [\r\n        {\r\n            id: 1,\r\n            path: \"/\",\r\n            text: \"Home\",\r\n        },\r\n        {\r\n            id: 2,\r\n            path: \"/about\",\r\n            text: \"About\",\r\n        },\r\n    ]\r\n\r\n    const [navbarOpen, setNavbarOpen] = useState(false)\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n\r\n    /*\r\n    const handleToggle = () => {\r\n        setNavbarOpen(!navbarOpen)\r\n    }\r\n    */\r\n\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>\r\n                {navbarOpen ? (\r\n                    <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />\r\n                ) : (\r\n                    <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\r\n                )}\r\n            </button>\r\n            <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n                {links.map(link => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink to={link.path} activeClassName=\"active-link\" exact onClick={() => closeMenu()}>{link.text}</NavLink>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport TodosList from \"./TodosList\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport About from \"../pages/About\"\r\nimport NotMatch from \"../pages/NotMatch\"\r\nimport Navbar from \"./Navbar\"\r\n\r\nconst TodoContainer = () => {\r\n    const [todos, setTodos] = useState(getInitialTodos)\r\n    useEffect(() => {\r\n        console.log(\"test run\");\r\n        // getting stored items\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const loadedTodos = JSON.parse(temp)\r\n\r\n        if (loadedTodos) {\r\n            setTodos(loadedTodos)\r\n        }\r\n    }, [setTodos])\r\n\r\n    useEffect(() => {\r\n        console.log(\"test run 1\");\r\n        // storing todos items\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n    function getInitialTodos() {\r\n        // getting stored items\r\n        const temp = localStorage.getItem(\"todos\")\r\n        const savedTodos = JSON.parse(temp)\r\n        console.log(savedTodos || []);\r\n        return savedTodos || []\r\n    }\r\n\r\n    const handleChange = id => {\r\n        setTodos(prevState =>\r\n            prevState.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id\r\n            }),\r\n        ])\r\n    }\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false,\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const setUpdate = (updatedTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div className=\"container\">\r\n                        <div className=\"inner\">\r\n                            <Header />\r\n                            <InputTodo addTodoProps={addTodoItem} />\r\n                            <TodosList\r\n                                todos={todos}\r\n                                handleChangeProps={handleChange}\r\n                                deleteTodoProps={delTodo}\r\n                                setUpdate={setUpdate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n                {/* <Route path=\"/about\" component={About} /> */}\r\n\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                    \r\n                <Route path=\"*\">\r\n                    <NotMatch />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoContainer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoContainer from \"./components/TodoContainer\"\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n// stylesheet\nimport \"./App.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <TodoContainer />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}